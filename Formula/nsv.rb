# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Nsv < Formula
  desc "A convention-based semantic versioning tool that leans on the power of conventional commits to make versioning your software a breeze!"
  homepage "https://github.com/purpleclay/nsv"
  version "0.7.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/purpleclay/nsv/releases/download/v0.7.1/nsv_0.7.1_darwin_x86_64.tar.gz"
      sha256 "67c6321b958491009a3b9a0e82edae4447b6a23d3824e1126b6e4ca1848ebab9"

      def install
        bin.install "nsv"

        bash_output = Utils.safe_popen_read(bin/"nsv", "completion", "bash")
        (bash_completion/"nsv").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"nsv", "completion", "zsh")
        (zsh_completion/"_nsv").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"nsv", "completion", "fish")
        (fish_completion/"nsv.fish").write fish_output

        man1.install "manpages/nsv.1.gz"
      end
    end
    on_arm do
      url "https://github.com/purpleclay/nsv/releases/download/v0.7.1/nsv_0.7.1_darwin_arm64.tar.gz"
      sha256 "bfbd4479f496f6724bafbaecdc8165f713274ccec925502232c8865bc74bfb8d"

      def install
        bin.install "nsv"

        bash_output = Utils.safe_popen_read(bin/"nsv", "completion", "bash")
        (bash_completion/"nsv").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"nsv", "completion", "zsh")
        (zsh_completion/"_nsv").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"nsv", "completion", "fish")
        (fish_completion/"nsv.fish").write fish_output

        man1.install "manpages/nsv.1.gz"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/purpleclay/nsv/releases/download/v0.7.1/nsv_0.7.1_linux_x86_64.tar.gz"
        sha256 "ba278c024865bdf28c0f765397b3466b94455e7e7e22ffbbf0f7cd906b19ed65"

        def install
          bin.install "nsv"

          bash_output = Utils.safe_popen_read(bin/"nsv", "completion", "bash")
          (bash_completion/"nsv").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"nsv", "completion", "zsh")
          (zsh_completion/"_nsv").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"nsv", "completion", "fish")
          (fish_completion/"nsv.fish").write fish_output

          man1.install "manpages/nsv.1.gz"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/purpleclay/nsv/releases/download/v0.7.1/nsv_0.7.1_linux_arm64.tar.gz"
        sha256 "0e964a3beec95e73a947fb712e488207a32c5ee7b182aa867a6e322e498ce933"

        def install
          bin.install "nsv"

          bash_output = Utils.safe_popen_read(bin/"nsv", "completion", "bash")
          (bash_completion/"nsv").write bash_output

          zsh_output = Utils.safe_popen_read(bin/"nsv", "completion", "zsh")
          (zsh_completion/"_nsv").write zsh_output

          fish_output = Utils.safe_popen_read(bin/"nsv", "completion", "fish")
          (fish_completion/"nsv.fish").write fish_output

          man1.install "manpages/nsv.1.gz"
        end
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/nsv version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
