# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Dns53 < Formula
  desc "Dynamic DNS within Amazon Route53. Expose your EC2 quickly, easily and privately"
  homepage "https://github.com/purpleclay/dns53"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/dns53/releases/download/v0.3.0/dns53_0.3.0_darwin-x86_64.tar.gz"
      sha256 "fbac6f7e076e71c76e0772665d3aab0fdfe1653f1478d1931354da706a6750a8"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/dns53/releases/download/v0.3.0/dns53_0.3.0_darwin-arm64.tar.gz"
      sha256 "950a653f14e27e2dd16b693e3ce0474f5f48fc1ed0c8a8218072de26154bafb7"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/dns53/releases/download/v0.3.0/dns53_0.3.0_linux-x86_64.tar.gz"
      sha256 "19f22d616cd7eba5cee503f80e3c9d3abc8c13009b94b221dc2799b15439a35c"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/dns53/releases/download/v0.3.0/dns53_0.3.0_linux-arm64.tar.gz"
      sha256 "d78732324c592f786a5dfcf193ef7901b8c24b7a1c8af5844a4959050b21c64e"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/dns53 version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
