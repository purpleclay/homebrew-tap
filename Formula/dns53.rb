# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Dns53 < Formula
  desc "Dynamic DNS within Amazon Route53. Expose your EC2 quickly, easily and privately"
  homepage "https://github.com/purpleclay/dns53"
  version "0.5.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/dns53/releases/download/v0.5.0/dns53_0.5.0_darwin-arm64.tar.gz"
      sha256 "017c023b5cc7eb0b6bbc688cefb22c2364247b161f3e2152c2a4f3a7ee54cb99"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/dns53/releases/download/v0.5.0/dns53_0.5.0_darwin-x86_64.tar.gz"
      sha256 "844be59e72696b9259a182f0341df4efbd8d10f07b81b9dfa62536082fd18bd3"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/dns53/releases/download/v0.5.0/dns53_0.5.0_linux-x86_64.tar.gz"
      sha256 "539cfecd0cf2650542810446b6c8d3a2a0a2567c1551680d2d9ba0307cf0137b"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/dns53/releases/download/v0.5.0/dns53_0.5.0_linux-arm64.tar.gz"
      sha256 "80ac8bb6620b683dd84f0fdb28cce0a1cc744d1100343ef564224f56298e3e89"

      def install
        bin.install "dns53"

        bash_output = Utils.safe_popen_read(bin/"dns53", "completion", "bash")
        (bash_completion/"dns53").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"dns53", "completion", "zsh")
        (zsh_completion/"_dns53").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"dns53", "completion", "fish")
        (fish_completion/"dns53.fish").write fish_output

        man1.install "manpages/dns53.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/dns53 version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
