# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class ImdsMock < Formula
  desc "Mock the Amazon Instance Metadata Service (IMDS) for EC2"
  homepage "https://github.com/purpleclay/imds-mock"
  version "0.1.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.1.0/imds-mock_0.1.0_darwin-arm64.tar.gz"
      sha256 "a19fa2f24f5a816423ea69b0c00836230ab8eda2184c50f454ad67eaaf842769"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.1.0/imds-mock_0.1.0_darwin-x86_64.tar.gz"
      sha256 "a2249629b4c62cadd1a636ada3f2d30b5cb9dd18a5983ee680d108d927ac5ec6"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.1.0/imds-mock_0.1.0_linux-x86_64.tar.gz"
      sha256 "ee0df9a056a7c0169c91a6e797f70883ec84a96622efd504400439934b2147ba"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.1.0/imds-mock_0.1.0_linux-arm64.tar.gz"
      sha256 "ab417c33a4ba17df2be00e0bae780fb7d8b0660ad83f748cfccf9ed9f0ffe091"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/imds-mock version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
