# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class ImdsMock < Formula
  desc "Easy mocking of the Amazon EC2 Instance Metadata Service (IMDS)"
  homepage "https://github.com/purpleclay/imds-mock"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_darwin-x86_64.tar.gz"
      sha256 "cc3072bce0b0d39bcae61624be2d6e0726ecb816f89ba8a49243e15df73cae48"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_darwin-arm64.tar.gz"
      sha256 "445b7a8d79ff8f5983b381e3bbb31e694cbb79b6caf5c413c219330e4be1b1c9"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_linux-arm64.tar.gz"
      sha256 "13aaec775ee002f5531ea901e94cccbef119e16db0c8fc7c36db033a47aceda9"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_linux-x86_64.tar.gz"
      sha256 "daeda6a580ef39001697bdc0970f1f979c3ebbcde6cce7260024057fa3a7d6e8"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/imds-mock version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
