# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class ImdsMock < Formula
  desc "Easy mocking of the Amazon EC2 Instance Metadata Service (IMDS)"
  homepage "https://github.com/purpleclay/imds-mock"
  version "0.3.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_darwin-x86_64.tar.gz"
      sha256 "fc498e845adc1fa3e4b728f98da12f64ca4fe6410503663e3fcec23fcc9d56ef"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_darwin-arm64.tar.gz"
      sha256 "1cb93535bc05a63144c7784c4641677bed0dc823d597310faa7c49613bfbd78d"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_linux-arm64.tar.gz"
      sha256 "e3da839bf5a43eb9789d6927af902d104cc4efc16e2c4be761382151d9d818c8"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/imds-mock/releases/download/v0.3.0/imds-mock_0.3.0_linux-x86_64.tar.gz"
      sha256 "c77d7e4a68b1144913e038bd4946f5266faf5182a1f15f045893bfd84829dbe9"

      def install
        bin.install "imds-mock"

        bash_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "bash")
        (bash_completion/"imds-mock").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "zsh")
        (zsh_completion/"_imds-mock").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"imds-mock", "completion", "fish")
        (fish_completion/"imds-mock.fish").write fish_output

        man1.install "manpages/imds-mock.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/imds-mock version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
