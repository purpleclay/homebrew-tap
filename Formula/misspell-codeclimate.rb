# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MisspellCodeclimate < Formula
  desc "Turn that misspell report into a GitLab compatible codeclimate report"
  homepage "https://github.com/purpleclay/misspell-codeclimate"
  version "0.1.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.1.0/misspell-codeclimate_0.1.0_darwin-x86_64.tar.gz"
      sha256 "0cdf553f38915668b58646080eb66395b1b6a0723034a98e485c3e2e196237c0"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.1.0/misspell-codeclimate_0.1.0_darwin-arm64.tar.gz"
      sha256 "9ac4d78e64ee41fa38e40d41209be8b7307faa47e742b5fc834d9e28f664d16d"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.1.0/misspell-codeclimate_0.1.0_linux-x86_64.tar.gz"
      sha256 "285382a1d07bcd077a01e0f217c96033236a9adccd843d8049409d97f75d5da3"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.1.0/misspell-codeclimate_0.1.0_linux-arm64.tar.gz"
      sha256 "4efa9aef34fd8bf8b40d680a0f114e9c8d0248570ae9aa0a35f2f7c6d6859cd8"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/misspell-codeclimate version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
