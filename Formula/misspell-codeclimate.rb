# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MisspellCodeclimate < Formula
  desc "Turn that misspell report into a GitLab compatible codeclimate report"
  homepage "https://github.com/purpleclay/misspell-codeclimate"
  version "0.2.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.2.0/misspell-codeclimate_0.2.0_darwin-x86_64.tar.gz"
      sha256 "4e36f4da5429b4828e1890931752d863f7064975cbca3d51916499646d26cea2"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.2.0/misspell-codeclimate_0.2.0_darwin-arm64.tar.gz"
      sha256 "d9b09a398ac31c7a995d1c1996132c219843929a53ccd824a65cbf67f8c90b79"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.2.0/misspell-codeclimate_0.2.0_linux-arm64.tar.gz"
      sha256 "a93e2520fdca3b79961bdebc54befcf4573b79a1d908c20cd7957bf8fc7f2c84"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/purpleclay/misspell-codeclimate/releases/download/v0.2.0/misspell-codeclimate_0.2.0_linux-x86_64.tar.gz"
      sha256 "c0f42ac4017a979d99c0d8e63f7cb054b8942e5bb1094aee258e45d4e6750835"

      def install
        bin.install "misspell-codeclimate"

        bash_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "bash")
        (bash_completion/"misspell-codeclimate").write bash_output

        zsh_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "zsh")
        (zsh_completion/"_misspell-codeclimate").write zsh_output

        fish_output = Utils.safe_popen_read(bin/"misspell-codeclimate", "completion", "fish")
        (fish_completion/"misspell-codeclimate.fish").write fish_output

        man1.install "manpages/misspell-codeclimate.1.gz"
      end
    end
  end

  test do
    installed_version = shell_output("#{bin}/misspell-codeclimate version --short 2>&1")
    assert_match "v#{version}", installed_version
  end
end
